type Query{
  getAllIngredients:[Ingredient]
  getAllRecipes:[Recipe]
  getAllSchedules:[Schedule]
  getSchedules(id:[String!]):[Schedule]
  getRandomRecipes(numOfRecipes: Int!): [Recipe]
}
type Ingredient{
  name: String!
  id: String!
  group: String!
  energy: Float!
  carbohydrates: Float!
  fat: Float!
  protein: Float!
  microNutrients: [microNutrient]!
}

type microNutrient{
  name: String!
  amount: Float!
  unit: String!
}

type Recipe{
  name: String!
  id: String!
  instructions: [String]!
  portions: Float!
  ingredients: [RecipeIngredient]!
  energy: Float!
  carbohydrates: Float!
  fat: Float!
  protein: Float!
  microNutrients: [microNutrient]!
  categories: [String]
}

type Schedule{
  id: String!
  name: String!
  categories: [String]
  recipes: [ScheduleRecipe]!
  recipeObjects: [ScheduleRecipeObject]!
}

type ScheduleRecipe{
  id: String!
  day: Int!
  mealInDay: Int!
  portions: Float!
}
type ScheduleRecipeObject{
  name: String!
}

type RecipeIngredient{
  name: String
  id: String!
  unit: String!
  amount: Float!
  grams: Float!
}

type test{
  id: Float!
  name: String!
}

input RecipeIngredientInput{
  id: String!
  unit: String!
  amount: Float!
  grams: Float!
}

input RecipeAddRequest{
  name: String!
  instructions: [String]!
  portions: Float!
  categories: [String]!
  ingredients: [RecipeIngredientInput]!
}

type RecipeAddResponse{
  error: String
  recipe: Recipe
}

input ScheduleRecipeInput{
  id: String!
  day: Int!
  mealInDay: Int!
  portions: Float!
}

input ScheduleAddRequest{
  name: String!
  categories: [String]!
  recipes: [ScheduleRecipeInput]!
}

type ScheduleAddResponse{
  error: String
  schedule: Schedule
}

input ScheduleRandomRecipesRequest{
  name: String!
  categories: [String]
  days: Int!
  portions: Float!
  breakfast: Boolean
  lunch: Boolean
  dinner: Boolean
}

type Mutation {
  postRecipe(recipeInfo: RecipeAddRequest): RecipeAddResponse!
  postSchedule(scheduleInfo: ScheduleAddRequest): ScheduleAddResponse!
  postScheduleRandomRecipes(scheduleInfo: ScheduleRandomRecipesRequest): ScheduleAddResponse!
}